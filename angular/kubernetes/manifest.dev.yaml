apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: demo-namespace-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: BACKEND_IP
              valueFrom:
                secretKeyRef:
                  key: BACKEND_IP
                  name: backend-ip
                  optional: false
          image: europe-west9-docker.pkg.dev/incubation-ids/demo-gke-repo/angular:latest
          imagePullPolicy: Always
          name: frontend
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
          securityContext:
            capabilities:
              drop:
                - NET_RAW
      enableServiceLinks: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: false
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  name: frontend
  namespace: demo-namespace-prod
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: frontend
  sessionAffinity: None
  type: LoadBalancer
