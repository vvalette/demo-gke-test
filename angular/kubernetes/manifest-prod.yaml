apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-prod-stable
  namespace: demo-namespace-prod
  labels:
    app: frontend
    version: stable
  annotations:
     autopilot.gke.io/warden-version: 2.8.81
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
      version: stable
  strategy:
    type: Canary  # Change deployment strategy to Canary
    rollingUpdate:
      maxSurge: 1  # Adjust max surge for canary update
      maxUnavailable: 0
    canary:
      canaryService: frontend-prod-canary  # Specify the canary service
      stableService: frontend-prod-stable  # Specify the stable service
      trafficPercentages:
        frontend-prod-stable: 50  # Adjust traffic distribution between stable and canary
        frontend-prod-canary: 50
  template:
    metadata:
      labels:
        app: frontend
        version: stable
    spec:
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: europe-west9-docker.pkg.dev/incubation-ids/demo-gke-repo/angular:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        env:
          - name: BACKEND_IP
            valueFrom:
              secretKeyRef:
                key: BACKEND_IP
                name: backend-ip
                optional: false
        resources:
          limits:
            cpu: 250m
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 250m
            ephemeral-storage: 1Gi
            memory: 512Mi
        securityContext:
          capabilities:
            drop:
              - NET_RAW
      enableServiceLinks: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: false
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-prod-stable
  namespace: demo-namespace-prod
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
spec:
  selector:
    app: frontend
    version: stable
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: LoadBalancer
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-prod-canary
  namespace: demo-namespace-prod
  labels:
    app: frontend
    version: canary
  annotations:
    autopilot.gke.io/warden-version: 2.8.81
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      version: canary
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1  # Adjust max surge for canary update
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: frontend
        version: canary
    spec:
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: europe-west9-docker.pkg.dev/incubation-ids/demo-gke-repo/angular:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        env:
          - name: BACKEND_IP
            valueFrom:
              secretKeyRef:
                key: BACKEND_IP
                name: backend-ip
                optional: false
        resources:
          limits:
            cpu: 250m
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 250m
            ephemeral-storage: 1Gi
            memory: 512Mi
        securityContext:
          capabilities:
            drop:
              - NET_RAW
      enableServiceLinks: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: false
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-prod-canary
  namespace: demo-namespace-prod
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
spec:
  selector:
    app: frontend
    version: canary
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: LoadBalancer
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
